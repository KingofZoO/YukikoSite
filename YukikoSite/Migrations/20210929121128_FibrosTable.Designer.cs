// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YukikoSite.Models;

namespace YukikoSite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210929121128_FibrosTable")]
    partial class FibrosTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YukikoSite.Models.Account.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("YukikoSite.Models.Account.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin",
                            Password = "admin",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("YukikoSite.Models.FibroItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fibros");
                });

            modelBuilder.Entity("YukikoSite.Models.GalleryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GalleryItems");
                });

            modelBuilder.Entity("YukikoSite.Models.GlovesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gloves");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is gloves1",
                            ImagePath = "gloves1.jpg",
                            Title = "gloves1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is gloves2",
                            ImagePath = "gloves2.jpg",
                            Title = "gloves2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "This is gloves3",
                            ImagePath = "gloves3.jpg",
                            Title = "gloves3"
                        });
                });

            modelBuilder.Entity("YukikoSite.Models.NewsContentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewsItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewsItemId");

                    b.ToTable("NewsContentItems");
                });

            modelBuilder.Entity("YukikoSite.Models.NewsItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewsItems");
                });

            modelBuilder.Entity("YukikoSite.Models.OthersItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Others");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is other1",
                            ImagePath = "other1.jpg",
                            Title = "other1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is other2",
                            ImagePath = "other2.jpg",
                            Title = "other2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "This is other3",
                            ImagePath = "other3.jpg",
                            Title = "other3"
                        });
                });

            modelBuilder.Entity("YukikoSite.Models.SidingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Siding");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is siding1",
                            ImagePath = "siding1.jpg",
                            Title = "siding1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is siding2",
                            ImagePath = "siding2.jpg",
                            Title = "siding2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "This is siding3",
                            ImagePath = "siding3.jpg",
                            Title = "siding3"
                        });
                });

            modelBuilder.Entity("YukikoSite.Models.VentilationItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ventilation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is ventil1",
                            ImagePath = "ventil1.jpg",
                            Title = "ventil1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is ventil2",
                            ImagePath = "ventil2.jpg",
                            Title = "ventil2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "This is ventil3",
                            ImagePath = "ventil3.jpg",
                            Title = "ventil3"
                        });
                });

            modelBuilder.Entity("YukikoSite.Models.Account.User", b =>
                {
                    b.HasOne("YukikoSite.Models.Account.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("YukikoSite.Models.NewsContentItem", b =>
                {
                    b.HasOne("YukikoSite.Models.NewsItem", "NewsItem")
                        .WithMany("NewsContentItems")
                        .HasForeignKey("NewsItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsItem");
                });

            modelBuilder.Entity("YukikoSite.Models.Account.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("YukikoSite.Models.NewsItem", b =>
                {
                    b.Navigation("NewsContentItems");
                });
#pragma warning restore 612, 618
        }
    }
}
