@model IEnumerable<Fibro14Item>

@{
    ViewData["Title"] = "Фиброцементный сайдинг (14мм)";

    int num = 1;

    string NumTitle(IModelItem item) => $"{num++ + ViewBag.pageSize * (ViewBag.currentPage - 1)}. {item.Title}";
}

<div class="items-container-content">
    @foreach (var item in Model) {
        <div class="item-content siding-item">
            <div class="item-title">
                @if (item.LinkPath == null) {
                    <label>@NumTitle(item)</label>
                }
                else {
                    <a href="@item.LinkPath" target="_blank">@NumTitle(item)</a>
                }
            </div>
            <table class="item-table">
                <tr>
                    <td>
                        <img src="~/images/fibros14/@item.ImagePath"
                             onclick="enlargeImg(this, 3.3)" />
                    </td>
                </tr>
                <tr>
                    <td class="item-desc">
                        @item.Description
                    </td>
                </tr>
            </table>
        </div>
    }
</div>
@await Html.PartialAsync("Partials/PaginatorPartial", new PaginatorViewModel(ViewBag.pageSize, ViewBag.currentPage, ViewBag.totalCount, ViewBag.mapPath))
<script src="~/js/enlargeScript.js" asp-append-version="true"></script>