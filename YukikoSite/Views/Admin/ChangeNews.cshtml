@model NewsItem

@{
    ViewData["Title"] = "Новости";
}

@{
    string FolderPath() => Model == null ? "" : $"/images/news/{Model.Id}";
    string ImageSource() => Model == null ? "" : $"{FolderPath()}/{Model.TitleImagePath}";
    string ModelTitle() => Model == null ? "" : $"{Model.Title}";
    string ModelDesc() => Model == null ? "" : $"{Model.Description}";
    List<string> ImageExtensions = new List<string> { ".JPG", ".JPE", ".BMP", ".GIF", ".PNG" };
}

<form class="form-frame" asp-controller="Admin" asp-action="ChangeNews" asp-antiforgery="true" method="post" enctype="multipart/form-data">
    <div>
        <div>
            <input type="hidden" value="@ViewBag.NewsId" asp-for="Id" />
            <input type="hidden" asp-for="TitleImagePath" />
        </div>
        <div>
            <label asp-for="Title">Введите наименование новости</label><br />
            <input asp-for="Title" id="title-input" />
        </div>
        <div>
            <label asp-for="Description">Введите описание новости</label><br />
            <textarea asp-for="Description" id="desc-input"></textarea>
        </div>
        <div>
            <input type="file" name="titleImageFile" accept="image/*" id="img-input" />
        </div>
        <div>
            <input type="file" name="contentFiles" accept="image/*, video/*" id="files-input" multiple/>
        </div>
    </div>
    <input type="submit" value="Сохранить" />
</form>
<div class="second-info">
    <div class="news-content-header">
        <h1 id="title-preview">@ModelTitle()</h1>
        <div class="news-image-block">
            <img src="@ImageSource()" id="img-preview" />
        </div>
        <div class="news-desc" id="desc-preview">
            @ModelDesc()
        </div>
    </div>
    <div class="news-content-items">
        @if (Model != null) {
            @foreach (var item in Model.NewsContentItems) {
                if (ImageExtensions.Contains(System.IO.Path.GetExtension(item.ItemPath.ToUpperInvariant()))) {
                    <img src="@FolderPath()/@item.ItemPath" />
                }
                else {
                    <video controls>
                        <source src="@FolderPath()/@item.ItemPath" />
                    </video>
                }
            }
        }
    </div>
</div>
<script>
    const imgInput = document.getElementById("img-input");
    const imgPreview = document.getElementById("img-preview");
    const titleInput = document.getElementById("title-input");
    const titlePreview = document.getElementById("title-preview");
    const descInput = document.getElementById("desc-input");
    const descPreview = document.getElementById("desc-preview");

    imgInput.addEventListener("change", function () {
        getImgData();
    });

    if (titleInput != null) {
        titleInput.addEventListener("change", function () {
            titlePreview.innerText = titleInput.value;
        });
    }

    descInput.addEventListener("change", function () {
        descPreview.innerText = descInput.value;
    });

    function getImgData() {
        const files = imgInput.files[0];
        if (files) {
            const fileReader = new FileReader();
            fileReader.readAsDataURL(files);
            fileReader.addEventListener("load", function () {
                imgPreview.src = fileReader.result;
            });
        }
    }
</script>